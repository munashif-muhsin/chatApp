{
  "_args": [
    [
      {
        "raw": "express-io-pubsub",
        "scope": null,
        "escapedName": "express-io-pubsub",
        "name": "express-io-pubsub",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/muhsin/My Projects/chatApp"
    ]
  ],
  "_from": "express-io-pubsub@latest",
  "_id": "express-io-pubsub@0.1.2",
  "_inCache": true,
  "_location": "/express-io-pubsub",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-io-pubsub",
    "scope": null,
    "escapedName": "express-io-pubsub",
    "name": "express-io-pubsub",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-io-pubsub/-/express-io-pubsub-0.1.2.tgz",
  "_shasum": "b09dca6161f9853c467d147b75db34725dd1e97f",
  "_shrinkwrap": null,
  "_spec": "express-io-pubsub",
  "_where": "/Users/muhsin/My Projects/chatApp",
  "author": {
    "name": "Bryant Williams",
    "email": "b.n.williams@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/scien/express-io-pubsub/issues"
  },
  "dependencies": {
    "mongodb": "1.1.x",
    "redis": "0.7.x"
  },
  "description": "Express to Socket.io pubsub",
  "devDependencies": {
    "express": "3.0.x",
    "socket.io": "0.9.x"
  },
  "directories": {},
  "dist": {
    "shasum": "b09dca6161f9853c467d147b75db34725dd1e97f",
    "tarball": "https://registry.npmjs.org/express-io-pubsub/-/express-io-pubsub-0.1.2.tgz"
  },
  "homepage": "http://github.com/scien/express-io-pubsub.git",
  "keywords": [
    "express",
    "mongo",
    "mongodb",
    "pubsub",
    "redis",
    "socket.io"
  ],
  "main": "./lib/express-io-pubsub.js",
  "maintainers": [
    {
      "name": "scien",
      "email": "b.n.williams@gmail.com"
    }
  ],
  "name": "express-io-pubsub",
  "optionalDependencies": {},
  "readme": "# Express to Socket.io PubSub\n\n## Features\n * Allows an Express server to publish messages to a subscribed Socket.io server\n * Shared data storage can use MongoDB (capped collection tailable cursors) or Redis (pubsub)\n * Servers can be completely independent. They just need to be able to connect to the data store\n\n## Description\nExpress server connects to either a MongoDB capped collection or publishes to a Redis channel.\nThis is accomplished through simple middleware making request.publish(room, event, data) available\n\nSocket.io server connects to the same collection or subscribes to a Redis channel.  This is done \nthrough a listen command, and then the client can join the room/channel to listen to.\n\n## Usage\n### Socket.io\n```\nexpress = require 'express'\nhttp    = require 'http'\nio      = require 'socket.io'\npubsub  = require '../../lib/express-io-pubsub'\n\napp = express()\nserver = http.createServer app\nio = io.listen server\n\napp.get '/', (req, res) ->\n  res.send '\n    <script src=\"/socket.io/socket.io.js\"></script>\n    <script>\n      var socket = io.connect(\"http://localhost:3001\");\n      socket.on(\"connect\", function(data) {\n        socket.emit(\"join room\", \"lobby\");\n        socket.on(\"update\", function (data) {\n          var p = document.createElement(\"p\");\n          var t = document.createTextNode(data.msg);\n          p.appendChild(t);\n          document.body.appendChild(p);\n        });\n      });\n    </script>\n    <body><p>waiting for messages</p></body>\n  '\n\nio.sockets.on 'connection', (socket) ->\n  socket.on 'join room', (room) ->\n    socket.join room\n\npubsub.listen io.sockets, {\n  collection: 'events'\n  database: 'test'\n  host: 'localhost'\n  port: 27017\n  type: 'mongodb'\n}\n\nserver.listen 3001\n```\n\n### Express\n```\nexpress = require 'express'\npubsub  = require '../../lib/express-io-pubsub'\n\napp = express()\n\napp.configure () ->\n  app.use pubsub.middleware {\n    collection: 'events'\n    database: 'test'\n    host: 'localhost'\n    port: 27017\n    type: 'mongodb'\n  }\napp.get '/', (req, res) ->\n  req.publish \"lobby\", \"update\", {msg: 'Hello World!'}\n  res.send \"message sent\"\n\napp.listen 3002\n```\n\n## LICENSE\n```\nCopyright (c) 2012 Bryant Williams <b.n.williams@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n\n",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/scien/express-io-pubsub.git"
  },
  "scripts": {
    "postinstall": "cake build",
    "preinstall": "cake clean"
  },
  "version": "0.1.2"
}
